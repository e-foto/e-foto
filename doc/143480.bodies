class CommonCVMethods
!!!283896.cpp!!!	putImage(inout width : int, inout height : int, inout format : int, inout image : void) : bool
	//por fazer
	return false;
!!!284024.cpp!!!	loadImage(inout width : int, inout height : int, inout format : int, in filePath : string) : bool
	if (currentImage != NULL)
	{
		freeImage();
	}
	IplImage* temp = cvLoadImage(filePath.c_str(),-1);
	if (temp == NULL)
	{
		cerr << "Error: sorry, can't load image.\n";
		width = 0;
		height = 0;
		format = 0;
		return false;
	}
	if (temp->nChannels == 3)
	{
		currentImage = cvCreateImage(cvGetSize(temp), IPL_DEPTH_8U, temp->nChannels);
		cvCvtColor(temp, currentImage, CV_BGR2RGB);
		cvReleaseImage(&temp);
	}
	else
	{
		currentImage = temp;
	}
	width = currentImage->width;
	height = currentImage->height;
	format = currentImage->nChannels;
	return true;
!!!284152.cpp!!!	rotateImage(in ang : double) : void
	//por fazer
!!!284280.cpp!!!	cutImage(in x : int, in y : int, in w : int, in h : int) : bool
	if (currentImage == NULL)
		return false;
	if (this->cropped != NULL)
	{
		freeCropped();
	}
	// Must have dimensions of output image
	cropped = cvCreateImage( cvSize(w,h), currentImage->depth, currentImage->nChannels );

	// Say what the source region is
	cvSetImageROI( currentImage, cvRect( x, y, w, h ) );

	// Do the copy
	cvCopy( currentImage, cropped );
	cvResetImageROI( currentImage );

	return cropped;
!!!284408.cpp!!!	freeImage() : void
	if (currentImage != NULL)
	{
		cvReleaseImage(&currentImage);
		currentImage = NULL;
	}
!!!284536.cpp!!!	freeCropped() : void
	if (cropped != NULL)
	{
		cvReleaseImage(&cropped);
		cropped = NULL;
	}
!!!284664.cpp!!!	getImagePixels() : void
	if (currentImage != NULL)
		return currentImage->imageData;
	return NULL;
!!!284792.cpp!!!	getCroppedPixels() : void
	if (cropped != NULL)
		return cropped->imageData;
	return NULL;
!!!284920.cpp!!!	CommonCVMethods()
	currentImage = NULL;
	cropped = NULL;
!!!285048.cpp!!!	~CommonCVMethods()
	if (this->currentImage != NULL)
	{
		freeImage();
	}
	if (this->cropped != NULL)
	{
		freeCropped();
	}
