class ObjectSpaceCoordinate
!!!236664.cpp!!!	ObjectSpaceCoordinate()

    available = false;
    sigmaAvailable = false;
!!!236792.cpp!!!	ObjectSpaceCoordinate(in myUnit : string, in myX : double, in myY : double, in myZ : double, in mySigmaX : double = 1, in mySigmaY : double = 1, in mySigmaZ : double = 1, in mySigmaXY : double = 0, in mySigmaXZ : double = 0, in mySigmaYZ : double = 0)

    setUnit(myUnit);
    setX(myX);
    setY(myY);
    setZ(myZ);
    setSigmaX(mySigmaX);
    setSigmaY(mySigmaY);
    setSigmaZ(mySigmaZ);
    setSigmaXY(mySigmaXY);
    setSigmaXZ(mySigmaXZ);
    setSigmaYZ(mySigmaYZ);
    available = true;
    sigmaAvailable = true;
!!!236920.cpp!!!	ObjectSpaceCoordinate(in myPosition : PositionMatrix)

    setPosition(myPosition);
    sigmaAvailable = false;
!!!237048.cpp!!!	ObjectSpaceCoordinate(in myPosition : PositionMatrix, in myPositionSigmas : Matrix)

    setPosition(myPosition);
    setPositionSigmas(myPositionSigmas);
!!!237176.cpp!!!	setX(in newX : double) : void

    x = newX;
!!!237304.cpp!!!	setY(in newY : double) : void

    y = newY;
!!!237432.cpp!!!	setZ(in newZ : double) : void

    z = newZ;
!!!237560.cpp!!!	setSigmaX(in newSigmaX : double) : void

    sigmaX = newSigmaX;
!!!237688.cpp!!!	setSigmaY(in newSigmaY : double) : void

    sigmaY = newSigmaY;
!!!237816.cpp!!!	setSigmaZ(in newSigmaZ : double) : void

    sigmaZ = newSigmaZ;
!!!237944.cpp!!!	setSigmaXY(in newSigmaXY : double) : void

    sigmaXY = newSigmaXY;
!!!238072.cpp!!!	setSigmaXZ(in newSigmaXZ : double) : void

    sigmaXZ = newSigmaXZ;
!!!238200.cpp!!!	setSigmaYZ(in newSigmaYZ : double) : void

    sigmaYZ = newSigmaYZ;
!!!238328.cpp!!!	setUnit(in newUnit : string) : void

    unit = newUnit;
!!!238456.cpp!!!	getX() : double

    return x;
!!!238584.cpp!!!	getY() : double

    return y;
!!!238712.cpp!!!	getZ() : double

    return z;
!!!238840.cpp!!!	getSigmaX() : double

    return sigmaX;
!!!238968.cpp!!!	getSigmaY() : double

    return sigmaY;
!!!239096.cpp!!!	getSigmaZ() : double

    return sigmaZ;
!!!239224.cpp!!!	getSigmaXY() : double

    return sigmaXY;
!!!239352.cpp!!!	getSigmaXZ() : double

    return sigmaXZ;
!!!239480.cpp!!!	getSigmaYZ() : double

    return sigmaYZ;
!!!239608.cpp!!!	getUnit() : string

    return unit;
!!!239736.cpp!!!	setPosition(in newPosition : PositionMatrix) : void

    if (newPosition.getRows() == 3 && newPosition.getCols() == 1)
    {
        x = newPosition.get(1);
        y = newPosition.get(2);
        z = newPosition.get(3);
        unit = newPosition.getUnit();
    }
    available = true;
!!!239864.cpp!!!	setPositionSigmas(in newPositionSigmas : Matrix) : void

    if (newPositionSigmas.getRows() == 3 && newPositionSigmas.getCols() == 1)
    {
        sigmaX = newPositionSigmas.get(1,1);
        sigmaY = newPositionSigmas.get(2,1);
        sigmaZ = newPositionSigmas.get(3,1);
        sigmaXY = 0;
        sigmaXZ = 0;
        sigmaYZ = 0;
    }
    else if (newPositionSigmas.getRows() == 3 && newPositionSigmas.getCols() == 3)
    {
        sigmaX = newPositionSigmas.get(1,1);
        sigmaY = newPositionSigmas.get(2,2);
        sigmaZ = newPositionSigmas.get(3,3);
        sigmaXY = newPositionSigmas.get(1,2);
        sigmaXZ = newPositionSigmas.get(1,3);
        sigmaYZ = newPositionSigmas.get(2,3);
    }
    sigmaAvailable = true;
!!!239992.cpp!!!	getPosition() : PositionMatrix

    PositionMatrix position(3,unit);
    position.set(1,x);
    position.set(2,y);
    position.set(3,z);
    return position;
!!!240120.cpp!!!	getPositionSigmas() : Matrix

    Matrix positionSigmas(3,3);
    positionSigmas.set(1,1,sigmaX);
    positionSigmas.set(2,2,sigmaY);
    positionSigmas.set(3,3,sigmaZ);
    positionSigmas.set(1,2,sigmaXY);
    positionSigmas.set(2,1,sigmaXY);
    positionSigmas.set(1,3,sigmaXZ);
    positionSigmas.set(3,1,sigmaXZ);
    positionSigmas.set(2,3,sigmaYZ);
    positionSigmas.set(3,2,sigmaYZ);
    return positionSigmas;
!!!240248.cpp!!!	objectType(in  : void) : string

    return "ObjectSpaceCoordinate";
!!!240376.cpp!!!	objectAssociations(in  : void) : string

    return "";
!!!240504.cpp!!!	is(in s : string) : bool

    return (s == "ObjectSpaceCoordinate" ? true : false);
!!!240632.cpp!!!	xmlSetData(in xml : string) : void

    EDomElement root(xml);
    unit = root.attribute("uom");
    EDomElement xmlPos = root.elementByTagName("gml:pos");
    if (xmlPos.isAvailable())
    {
        deque<double> gmlPosValues = root.elementByTagName("gml:pos").toGmlPos();
        x = gmlPosValues.at(0);
        y = gmlPosValues.at(1);
        z = gmlPosValues.at(2);
        available = true;
    }
    else
    {
        available = false;
    }
    Matrix sigmaMatrix;
    EDomElement xmlSigma = root.elementByTagName("sigma");
    if (xmlSigma.isAvailable())
    {
        sigmaMatrix.xmlSetData(xmlSigma.elementByTagName("mml:matrix").getContent());
        sigmaAvailable = true;
    }
    else
    {
        sigmaMatrix.identity(3);
        sigmaAvailable = false;
    }
    setPositionSigmas(sigmaMatrix);
!!!240760.cpp!!!	xmlGetData() : string

    stringstream result;
    result << "<spatialCoordinates uom=\"" << unit << "\">\n";
    if (available)
        result << "<gml:pos>" << Conversion::doubleToString(x) << " " << Conversion::doubleToString(y) << " " << Conversion::doubleToString(z) << "</gml:pos>\n";
    else
        result << "<gml:pos>Not Available</gml:pos>\n";
    if (sigmaAvailable)
        result << "<sigma>\n" << getPositionSigmas().xmlGetData() << "</sigma>\n";
    else
        result << "<sigma>Not Available</sigma>\n";
    result << "</spatialCoordinates>";
    return result.str();
